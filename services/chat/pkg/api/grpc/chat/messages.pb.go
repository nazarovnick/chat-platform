// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: messages.proto

package chat

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message represents a chat message.
type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the message.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Chat ID where the message was sent.
	ChatId uint32 `protobuf:"varint,2,opt,name=chat_id,proto3" json:"chat_id,omitempty"`
	// User ID who sent the message.
	UserId uint32 `protobuf:"varint,3,opt,name=user_id,proto3" json:"user_id,omitempty"`
	// Content of the message.
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// Timestamp when the message was sent (Unix time).
	Timestamp     uint32 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetChatId() uint32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *Message) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Request to send a new message.
type SendMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the chat to send the message to.
	ChatId uint32 `protobuf:"varint,1,opt,name=chat_id,proto3" json:"chat_id,omitempty"`
	// ID of the user sending the message.
	UserId uint32 `protobuf:"varint,2,opt,name=user_id,proto3" json:"user_id,omitempty"`
	// Content of the message.
	Content       string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *SendMessageRequest) GetChatId() uint32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendMessageRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Response after a message is successfully sent.
type SendMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the newly created message.
	MessageId     uint32 `protobuf:"varint,1,opt,name=message_id,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageResponse) GetMessageId() uint32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// Request to get all messages for a chat.
type GetMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the chat to retrieve messages from.
	ChatId        uint32 `protobuf:"varint,1,opt,name=chat_id,proto3" json:"chat_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	mi := &file_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *GetMessagesRequest) GetChatId() uint32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

// Response with a list of messages.
type GetMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*Message             `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"` // List of messages.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	mi := &file_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *GetMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_messages_proto protoreflect.FileDescriptor

const file_messages_proto_rawDesc = "" +
	"\n" +
	"\x0emessages.proto\x12)github.com.nazarovnick.chat_platform.chat\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bbuf/validate/validate.proto\"\xc4\x01\n" +
	"\aMessage\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\rB\n" +
	"\xe0A\x02\xbaH\x04*\x02 \x00R\x02id\x12$\n" +
	"\achat_id\x18\x02 \x01(\rB\n" +
	"\xe0A\x02\xbaH\x04*\x02 \x00R\achat_id\x12$\n" +
	"\auser_id\x18\x03 \x01(\rB\n" +
	"\xe0A\x02\xbaH\x04*\x02 \x00R\auser_id\x12'\n" +
	"\acontent\x18\x04 \x01(\tB\r\xe0A\x02\xbaH\ar\x05\x10\x01\x18\xd0\x0fR\acontent\x12(\n" +
	"\ttimestamp\x18\x05 \x01(\rB\n" +
	"\xe0A\x02\xbaH\x04*\x02 \x00R\ttimestamp\"\x89\x01\n" +
	"\x12SendMessageRequest\x12$\n" +
	"\achat_id\x18\x01 \x01(\rB\n" +
	"\xe0A\x02\xbaH\x04*\x02 \x00R\achat_id\x12$\n" +
	"\auser_id\x18\x02 \x01(\rB\n" +
	"\xe0A\x02\xbaH\x04*\x02 \x00R\auser_id\x12'\n" +
	"\acontent\x18\x03 \x01(\tB\r\xe0A\x02\xbaH\ar\x05\x10\x01\x18\xd0\x0fR\acontent\"A\n" +
	"\x13SendMessageResponse\x12*\n" +
	"\n" +
	"message_id\x18\x01 \x01(\rB\n" +
	"\xe0A\x02\xbaH\x04*\x02 \x00R\n" +
	"message_id\":\n" +
	"\x12GetMessagesRequest\x12$\n" +
	"\achat_id\x18\x01 \x01(\rB\n" +
	"\xe0A\x02\xbaH\x04*\x02 \x00R\achat_id\"e\n" +
	"\x13GetMessagesResponse\x12N\n" +
	"\bmessages\x18\x01 \x03(\v22.github.com.nazarovnick.chat_platform.chat.MessageR\bmessagesB\x18Z\x16pkg/api/grpc/chat;chatb\x06proto3"

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData []byte
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)))
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_messages_proto_goTypes = []any{
	(*Message)(nil),             // 0: github.com.nazarovnick.chat_platform.chat.Message
	(*SendMessageRequest)(nil),  // 1: github.com.nazarovnick.chat_platform.chat.SendMessageRequest
	(*SendMessageResponse)(nil), // 2: github.com.nazarovnick.chat_platform.chat.SendMessageResponse
	(*GetMessagesRequest)(nil),  // 3: github.com.nazarovnick.chat_platform.chat.GetMessagesRequest
	(*GetMessagesResponse)(nil), // 4: github.com.nazarovnick.chat_platform.chat.GetMessagesResponse
}
var file_messages_proto_depIdxs = []int32{
	0, // 0: github.com.nazarovnick.chat_platform.chat.GetMessagesResponse.messages:type_name -> github.com.nazarovnick.chat_platform.chat.Message
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
