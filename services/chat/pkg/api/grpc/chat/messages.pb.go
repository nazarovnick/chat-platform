// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/proto/v1/chat/messages.proto

package chat

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message represents a chat message.
type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the message.
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Chat ID where the message was sent.
	ChatId uint32 `protobuf:"varint,2,opt,name=chat_id,proto3" json:"chat_id,omitempty"`
	// User UUID who sent the message.
	UserUuid string `protobuf:"bytes,3,opt,name=user_uuid,proto3" json:"user_uuid,omitempty"`
	// Content of the message.
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// Timestamp when the message was sent (Unix time).
	Timestamp     uint32 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_chat_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Message) GetChatId() uint32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *Message) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Request to send a new message.
type SendMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the chat to send the message to.
	ChatId uint32 `protobuf:"varint,1,opt,name=chat_id,proto3" json:"chat_id,omitempty"`
	// UUID of the user sending the message.
	UserUuid string `protobuf:"bytes,2,opt,name=user_uuid,proto3" json:"user_uuid,omitempty"`
	// Content of the message.
	Content       string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_chat_messages_proto_rawDescGZIP(), []int{1}
}

func (x *SendMessageRequest) GetChatId() uint32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *SendMessageRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Response after a message is successfully sent.
type SendMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the newly created message.
	MessageUuid   string `protobuf:"bytes,1,opt,name=message_uuid,proto3" json:"message_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_chat_messages_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageResponse) GetMessageUuid() string {
	if x != nil {
		return x.MessageUuid
	}
	return ""
}

// Request to get all messages for a chat.
type GetMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the chat to retrieve messages from.
	ChatId uint32 `protobuf:"varint,1,opt,name=chat_id,proto3" json:"chat_id,omitempty"`
	// Optional limit on the number of messages returned.
	Limit *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Optional offset for pagination.
	Offset *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// Optional timestamp to filter messages.
	Timestamp       *wrapperspb.UInt64Value `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TimestampFilter TimeFilterDirection     `protobuf:"varint,5,opt,name=timestamp_filter,proto3,enum=github.com.nazarovnick.chat_platform.chat.TimeFilterDirection" json:"timestamp_filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_chat_messages_proto_rawDescGZIP(), []int{3}
}

func (x *GetMessagesRequest) GetChatId() uint32 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *GetMessagesRequest) GetLimit() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *GetMessagesRequest) GetOffset() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *GetMessagesRequest) GetTimestamp() *wrapperspb.UInt64Value {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetMessagesRequest) GetTimestampFilter() TimeFilterDirection {
	if x != nil {
		return x.TimestampFilter
	}
	return TimeFilterDirection_TIME_FILTER_DIRECTION_UNSPECIFIED
}

// Response with a list of messages.
type GetMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of messages.
	Messages      []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_chat_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_chat_messages_proto_rawDescGZIP(), []int{4}
}

func (x *GetMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

var File_api_proto_v1_chat_messages_proto protoreflect.FileDescriptor

const file_api_proto_v1_chat_messages_proto_rawDesc = "" +
	"\n" +
	" api/proto/v1/chat/messages.proto\x12)github.com.nazarovnick.chat_platform.chat\x1a\x1dapi/proto/v1/chat/enums.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xb0\b\n" +
	"\aMessage\x12\x7f\n" +
	"\x04uuid\x18\x01 \x01(\tBk\x92A]*\x17UUID сообщения2BУникальный идентификатор сообщения\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\x04uuid\x12\xb1\x01\n" +
	"\achat_id\x18\x02 \x01(\rB\x96\x01\x92A\x88\x01*\vID чата2yЦелочисленный идентификатор чата, в который отправлено сообщение\xbaH\a\xc8\x01\x01*\x02 \x00R\achat_id\x12\xc4\x01\n" +
	"\tuser_uuid\x18\x03 \x01(\tB\xa5\x01\x92A\x96\x01*\x1dUUID пользователя2uУникальный идентификатор пользователя, отправившего сообщение\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\tuser_uuid\x12\xa1\x01\n" +
	"\acontent\x18\x04 \x01(\tB\x86\x01\x92Av*\x14Содержимое2^Текстовое содержимое сообщения (от 1 до 2000 символов)\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xd0\x0fR\acontent\x12\x97\x01\n" +
	"\ttimestamp\x18\x05 \x01(\rBy\x92Al*\x19Метка времени2OВремя отправки сообщения в формате Unix Timestamp\xbaH\a\xc8\x01\x01*\x02 \x00R\ttimestamp:\xea\x01\x92A\xe6\x01\n" +
	"\xe3\x01*\aMessage2\x1fМодель сообщенияJ\xb6\x01{\n" +
	"  \"uuid\": \"67f3c9a0-b0a2-4ae8-bc52-ff3f4b02e8a1\",\n" +
	"  \"chat_id\": 101,\n" +
	"  \"user_uuid\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n" +
	"  \"content\": \"Hello, world!\",\n" +
	"  \"timestamp\": 1714998600\n" +
	"}\"\x8d\x06\n" +
	"\x12SendMessageRequest\x12\xb1\x01\n" +
	"\achat_id\x18\x01 \x01(\rB\x96\x01\x92A\x88\x01*\vID чата2yЦелочисленный идентификатор чата, в который отправлено сообщение\xbaH\a\xc8\x01\x01*\x02 \x00R\achat_id\x12\xab\x01\n" +
	"\tuser_uuid\x18\x02 \x01(\tB\x8c\x01\x92A~*\x04UUID2vУникальный идентификатор пользователя отправляющего сообщение\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\tuser_uuid\x12\xa1\x01\n" +
	"\acontent\x18\x03 \x01(\tB\x86\x01\x92Av*\x14Содержимое2^Текстовое содержимое сообщения (от 1 до 2000 символов)\xbaH\n" +
	"\xc8\x01\x01r\x05\x10\x01\x18\xd0\x0fR\acontent:\xf0\x01\x92A\xec\x01\n" +
	"\xe9\x01*\x12SendMessageRequest2BЗапрос на отправку нового сообщенияJo{\n" +
	"  \"chat_id\": 102,\n" +
	"  \"user_uuid\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n" +
	"  \"content\": \"Hello, how are you?\"\n" +
	"}\xd2\x01\achat_id\xd2\x01\tuser_uuid\xd2\x01\acontent\"\xfc\x02\n" +
	"\x13SendMessageResponse\x12\x8f\x01\n" +
	"\fmessage_uuid\x18\x01 \x01(\tBk\x92A]*\x17UUID сообщения2BУникальный идентификатор сообщения\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\fmessage_uuid:\xd2\x01\x92A\xce\x01\n" +
	"\xcb\x01*\x13SendMessageResponse2gОтвет, содержащий UUID только что отправленного сообщенияJ<{\n" +
	"  \"message_uuid\": \"67f3c9a0-b0a2-4ae8-bc52-ff3f4b02e8a1\"\n" +
	"}\xd2\x01\fmessage_uuid\"\xd6\n" +
	"\n" +
	"\x12GetMessagesRequest\x12\xb7\x01\n" +
	"\achat_id\x18\x01 \x01(\rB\x9c\x01\x92A\x8e\x01*\vID чата2\x7fЦелочисленный идентификатор чата, из которого извлекаются сообщения\xbaH\a\xc8\x01\x01*\x02 \x00R\achat_id\x12\xa4\x01\n" +
	"\x05limit\x18\x02 \x01(\v2\x1c.google.protobuf.UInt32ValueBp\x92Ag*\n" +
	"Лимит2YМаксимальное количество возвращаемых сообщений\xbaH\x03\xc8\x01\x00R\x05limit\x12\xa4\x01\n" +
	"\x06offset\x18\x03 \x01(\v2\x1c.google.protobuf.UInt32ValueBn\x92Ak*\x10Смещение2WКоличество сообщений, которые нужно пропуститьR\x06offset\x12\xc4\x01\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1c.google.protobuf.UInt64ValueB\x87\x01\x92A~*\x19Метка времени2aФильтрация сообщений по времени (Unix-время в секундах)\xbaH\x03\xc8\x01\x00R\ttimestamp\x12\xa4\x02\n" +
	"\x10timestamp_filter\x18\x05 \x01(\x0e2>.github.com.nazarovnick.chat_platform.chat.TimeFilterDirectionB\xb7\x01\x92A\xb3\x01*?Направление фильтрации по времени2pОпределяет, искать сообщения ДО или ПОСЛЕ указанного времениR\x10timestamp_filter:\xc9\x02\x92A\xc5\x02\n" +
	"\xc2\x02*\x12GetMessagesRequest2\x9c\x01Запрос на получение сообщений из чата с поддержкой пагинации и фильтрации по времениJ\x82\x01{\n" +
	"  \"chat_id\": 102,\n" +
	"  \"limit\": 20,\n" +
	"  \"offset\": 0,\n" +
	"  \"timestamp\": 1714998600,\n" +
	"  \"timestamp_filter\": \"TIME_FILTER_DIRECTION_AFTER\"\n" +
	"}\xd2\x01\achat_id\"\xf9\x05\n" +
	"\x13GetMessagesResponse\x12\xc1\x01\n" +
	"\bmessages\x18\x01 \x03(\v22.github.com.nazarovnick.chat_platform.chat.MessageBq\x92An*\x12Сообщения2XСписок сообщений, полученных из указанного чатаR\bmessages:\x9d\x04\x92A\x99\x04\n" +
	"\x96\x04*\x13GetMessagesResponse2IОтвет, содержащий список сообщений чатаJ\xb3\x03{\n" +
	"  \"messages\": [\n" +
	"    {\n" +
	"      \"uuid\": \"67f3c9a0-b0a2-4ae8-bc52-ff3f4b02e8a1\",\n" +
	"      \"chat_id\": 102,\n" +
	"      \"user_uuid\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\",\n" +
	"      \"content\": \"Hello!\",\n" +
	"      \"timestamp\": 1714998600\n" +
	"    },\n" +
	"    {\n" +
	"      \"uuid\": \"a2b3c4d5-6e7f-8a9b-c0d1-e2f3a4b5c6d7\",\n" +
	"      \"chat_id\": 102,\n" +
	"      \"user_uuid\": \"c1d2e3f4-5678-9abc-def0-1234567890ab\",\n" +
	"      \"content\": \"Hi there!\",\n" +
	"      \"timestamp\": 1714998660\n" +
	"    }\n" +
	"  ]\n" +
	"}B\fZ\n" +
	"/chat;chatb\x06proto3"

var (
	file_api_proto_v1_chat_messages_proto_rawDescOnce sync.Once
	file_api_proto_v1_chat_messages_proto_rawDescData []byte
)

func file_api_proto_v1_chat_messages_proto_rawDescGZIP() []byte {
	file_api_proto_v1_chat_messages_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_chat_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_v1_chat_messages_proto_rawDesc), len(file_api_proto_v1_chat_messages_proto_rawDesc)))
	})
	return file_api_proto_v1_chat_messages_proto_rawDescData
}

var file_api_proto_v1_chat_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_proto_v1_chat_messages_proto_goTypes = []any{
	(*Message)(nil),                // 0: github.com.nazarovnick.chat_platform.chat.Message
	(*SendMessageRequest)(nil),     // 1: github.com.nazarovnick.chat_platform.chat.SendMessageRequest
	(*SendMessageResponse)(nil),    // 2: github.com.nazarovnick.chat_platform.chat.SendMessageResponse
	(*GetMessagesRequest)(nil),     // 3: github.com.nazarovnick.chat_platform.chat.GetMessagesRequest
	(*GetMessagesResponse)(nil),    // 4: github.com.nazarovnick.chat_platform.chat.GetMessagesResponse
	(*wrapperspb.UInt32Value)(nil), // 5: google.protobuf.UInt32Value
	(*wrapperspb.UInt64Value)(nil), // 6: google.protobuf.UInt64Value
	(TimeFilterDirection)(0),       // 7: github.com.nazarovnick.chat_platform.chat.TimeFilterDirection
}
var file_api_proto_v1_chat_messages_proto_depIdxs = []int32{
	5, // 0: github.com.nazarovnick.chat_platform.chat.GetMessagesRequest.limit:type_name -> google.protobuf.UInt32Value
	5, // 1: github.com.nazarovnick.chat_platform.chat.GetMessagesRequest.offset:type_name -> google.protobuf.UInt32Value
	6, // 2: github.com.nazarovnick.chat_platform.chat.GetMessagesRequest.timestamp:type_name -> google.protobuf.UInt64Value
	7, // 3: github.com.nazarovnick.chat_platform.chat.GetMessagesRequest.timestamp_filter:type_name -> github.com.nazarovnick.chat_platform.chat.TimeFilterDirection
	0, // 4: github.com.nazarovnick.chat_platform.chat.GetMessagesResponse.messages:type_name -> github.com.nazarovnick.chat_platform.chat.Message
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_v1_chat_messages_proto_init() }
func file_api_proto_v1_chat_messages_proto_init() {
	if File_api_proto_v1_chat_messages_proto != nil {
		return
	}
	file_api_proto_v1_chat_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_v1_chat_messages_proto_rawDesc), len(file_api_proto_v1_chat_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_v1_chat_messages_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_chat_messages_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_chat_messages_proto_msgTypes,
	}.Build()
	File_api_proto_v1_chat_messages_proto = out.File
	file_api_proto_v1_chat_messages_proto_goTypes = nil
	file_api_proto_v1_chat_messages_proto_depIdxs = nil
}
