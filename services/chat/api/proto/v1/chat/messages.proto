syntax = "proto3";

package github.com.nazarovnick.chat_platform.chat;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "pkg/api/grpc/chat;chat";

// Message represents a chat message.
message Message {
  // Unique identifier of the message.
  uint32 id = 1 [
    json_name = "id",
    (buf.validate.field).uint32.gt = 0,
    (google.api.field_behavior) = REQUIRED
  ];

  // Chat ID where the message was sent.
  uint32 chat_id = 2 [
    json_name = "chat_id",
    (buf.validate.field).uint32.gt = 0,
    (google.api.field_behavior) = REQUIRED
  ];

  // User ID who sent the message.
  uint32 user_id = 3 [
    json_name = "user_id",
    (buf.validate.field).uint32.gt = 0,
    (google.api.field_behavior) = REQUIRED
  ];

  // Content of the message.
  string content = 4 [
    json_name = "content",
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 2000,
    (google.api.field_behavior) = REQUIRED
  ];

  // Timestamp when the message was sent (Unix time).
  uint32 timestamp = 5 [
    json_name = "timestamp",
    (buf.validate.field).uint32.gt = 0,
    (google.api.field_behavior) = REQUIRED
  ];
}

// Request to send a new message.
message SendMessageRequest {
  // ID of the chat to send the message to.
  uint32 chat_id = 1 [
    json_name = "chat_id",
    (buf.validate.field).uint32.gt = 0,
    (google.api.field_behavior) = REQUIRED
  ];

  // ID of the user sending the message.
  uint32 user_id = 2 [
    json_name = "user_id",
    (buf.validate.field).uint32.gt = 0,
    (google.api.field_behavior) = REQUIRED
  ];

  // Content of the message.
  string content = 3 [
    json_name = "content",
    (buf.validate.field).string.min_len = 1,
    (buf.validate.field).string.max_len = 2000,
    (google.api.field_behavior) = REQUIRED
  ];
}

// Response after a message is successfully sent.
message SendMessageResponse {
  // ID of the newly created message.
  uint32 message_id = 1 [
    json_name = "message_id",
    (buf.validate.field).uint32.gt = 0,
    (google.api.field_behavior) = REQUIRED
  ];
}

// Request to get all messages for a chat.
message GetMessagesRequest {
  // ID of the chat to retrieve messages from.
  uint32 chat_id = 1 [
    json_name = "chat_id",
    (buf.validate.field).uint32.gt = 0,
    (google.api.field_behavior) = REQUIRED
  ];
}

// Response with a list of messages.
message GetMessagesResponse {
  repeated Message messages = 1;  // List of messages.
}
