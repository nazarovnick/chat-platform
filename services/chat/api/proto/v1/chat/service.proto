syntax = "proto3";

package github.com.nazarovnick.chat_platform.chat;

import "api/proto/v1/chat/messages.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "/chat;chat";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Chat Service API"
    version: "1.0.0"
    description:
      "API для работы с чатом, включая отправку сообщений, "
      "получение списка сообщений и управление диалогами"
    contact: {
      name: "Chat Service Team"
      url: "https://github.com/nazarovnick"
    }
    license: {
      name: "MIT License"
      url: "https://opensource.org/licenses/MIT"
    }
  }
  external_docs: {
    url: "https://github.com/nazarovnick/chat-platform/services/chat"
    description: "Полная документация и исходный код"
  }
  schemes: HTTP
  schemes: HTTPS
};

service ChatService {
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {
    option (google.api.http) = {
      post: "/v1/chat/send"
      body: "*"
    };
  }
  rpc GetMessages(GetMessagesRequest) returns (GetMessagesResponse) {
    option (google.api.http) = {get: "/v1/chat/messages"};
  }
}
