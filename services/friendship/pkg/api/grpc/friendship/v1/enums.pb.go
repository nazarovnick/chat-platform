// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/proto/v1/friendship/enums.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FriendRequestStatus int32

const (
	// Default unspecified status
	FriendRequestStatus_FRIEND_REQUEST_STATUS_UNSPECIFIED FriendRequestStatus = 0
	// Users are already friends
	FriendRequestStatus_FRIEND_REQUEST_STATUS_ALREADY_FRIENDS FriendRequestStatus = 1
	// The sender is blocked by the recipient
	FriendRequestStatus_FRIEND_REQUEST_STATUS_BLOCKED FriendRequestStatus = 2
	// Friend request was sent successfully
	FriendRequestStatus_FRIEND_REQUEST_STATUS_SUCCESS FriendRequestStatus = 3
	// A friend request already exists between the users
	FriendRequestStatus_FRIEND_REQUEST_STATUS_REQUEST_ALREADY_EXISTS FriendRequestStatus = 4
	// The target user was not found
	FriendRequestStatus_FRIEND_REQUEST_STATUS_USER_NOT_FOUND FriendRequestStatus = 5
	// A user cannot send a friend request to themselves
	FriendRequestStatus_FRIEND_REQUEST_STATUS_SELF_REQUEST_NOT_ALLOWED FriendRequestStatus = 6
)

// Enum value maps for FriendRequestStatus.
var (
	FriendRequestStatus_name = map[int32]string{
		0: "FRIEND_REQUEST_STATUS_UNSPECIFIED",
		1: "FRIEND_REQUEST_STATUS_ALREADY_FRIENDS",
		2: "FRIEND_REQUEST_STATUS_BLOCKED",
		3: "FRIEND_REQUEST_STATUS_SUCCESS",
		4: "FRIEND_REQUEST_STATUS_REQUEST_ALREADY_EXISTS",
		5: "FRIEND_REQUEST_STATUS_USER_NOT_FOUND",
		6: "FRIEND_REQUEST_STATUS_SELF_REQUEST_NOT_ALLOWED",
	}
	FriendRequestStatus_value = map[string]int32{
		"FRIEND_REQUEST_STATUS_UNSPECIFIED":              0,
		"FRIEND_REQUEST_STATUS_ALREADY_FRIENDS":          1,
		"FRIEND_REQUEST_STATUS_BLOCKED":                  2,
		"FRIEND_REQUEST_STATUS_SUCCESS":                  3,
		"FRIEND_REQUEST_STATUS_REQUEST_ALREADY_EXISTS":   4,
		"FRIEND_REQUEST_STATUS_USER_NOT_FOUND":           5,
		"FRIEND_REQUEST_STATUS_SELF_REQUEST_NOT_ALLOWED": 6,
	}
)

func (x FriendRequestStatus) Enum() *FriendRequestStatus {
	p := new(FriendRequestStatus)
	*p = x
	return p
}

func (x FriendRequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FriendRequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_friendship_enums_proto_enumTypes[0].Descriptor()
}

func (FriendRequestStatus) Type() protoreflect.EnumType {
	return &file_api_proto_v1_friendship_enums_proto_enumTypes[0]
}

func (x FriendRequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FriendRequestStatus.Descriptor instead.
func (FriendRequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_enums_proto_rawDescGZIP(), []int{0}
}

// AcceptFriendStatus represents the result of accepting a friend request
type AcceptFriendStatus int32

const (
	// Default unspecified status
	AcceptFriendStatus_ACCEPT_FRIEND_STATUS_UNSPECIFIED AcceptFriendStatus = 0
	// Users are already friends
	AcceptFriendStatus_ACCEPT_FRIEND_STATUS_ALREADY_FRIENDS AcceptFriendStatus = 1
	// The request cannot be accepted due to a block
	AcceptFriendStatus_ACCEPT_FRIEND_STATUS_BLOCKED AcceptFriendStatus = 2
	// Friend request was accepted successfully
	AcceptFriendStatus_ACCEPT_FRIEND_STATUS_SUCCESS AcceptFriendStatus = 3
	// Friend request was not found
	AcceptFriendStatus_ACCEPT_FRIEND_STATUS_REQUEST_NOT_FOUND AcceptFriendStatus = 4
	// Friend request was already accepted
	AcceptFriendStatus_ACCEPT_FRIEND_STATUS_ALREADY_ACCEPTED AcceptFriendStatus = 5
	// A user cannot accept their own friend request
	AcceptFriendStatus_ACCEPT_FRIEND_STATUS_SELF_ACCEPT_NOT_ALLOWED AcceptFriendStatus = 6
)

// Enum value maps for AcceptFriendStatus.
var (
	AcceptFriendStatus_name = map[int32]string{
		0: "ACCEPT_FRIEND_STATUS_UNSPECIFIED",
		1: "ACCEPT_FRIEND_STATUS_ALREADY_FRIENDS",
		2: "ACCEPT_FRIEND_STATUS_BLOCKED",
		3: "ACCEPT_FRIEND_STATUS_SUCCESS",
		4: "ACCEPT_FRIEND_STATUS_REQUEST_NOT_FOUND",
		5: "ACCEPT_FRIEND_STATUS_ALREADY_ACCEPTED",
		6: "ACCEPT_FRIEND_STATUS_SELF_ACCEPT_NOT_ALLOWED",
	}
	AcceptFriendStatus_value = map[string]int32{
		"ACCEPT_FRIEND_STATUS_UNSPECIFIED":             0,
		"ACCEPT_FRIEND_STATUS_ALREADY_FRIENDS":         1,
		"ACCEPT_FRIEND_STATUS_BLOCKED":                 2,
		"ACCEPT_FRIEND_STATUS_SUCCESS":                 3,
		"ACCEPT_FRIEND_STATUS_REQUEST_NOT_FOUND":       4,
		"ACCEPT_FRIEND_STATUS_ALREADY_ACCEPTED":        5,
		"ACCEPT_FRIEND_STATUS_SELF_ACCEPT_NOT_ALLOWED": 6,
	}
)

func (x AcceptFriendStatus) Enum() *AcceptFriendStatus {
	p := new(AcceptFriendStatus)
	*p = x
	return p
}

func (x AcceptFriendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AcceptFriendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_friendship_enums_proto_enumTypes[1].Descriptor()
}

func (AcceptFriendStatus) Type() protoreflect.EnumType {
	return &file_api_proto_v1_friendship_enums_proto_enumTypes[1]
}

func (x AcceptFriendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AcceptFriendStatus.Descriptor instead.
func (AcceptFriendStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_enums_proto_rawDescGZIP(), []int{1}
}

// DeclineFriendStatus represents the result of declining a friend request
type DeclineFriendStatus int32

const (
	// Default unspecified status
	DeclineFriendStatus_DECLINE_FRIEND_STATUS_UNSPECIFIED DeclineFriendStatus = 0
	// Users are already friends
	DeclineFriendStatus_DECLINE_FRIEND_STATUS_ALREADY_FRIENDS DeclineFriendStatus = 1
	// Friend request was declined successfully
	DeclineFriendStatus_DECLINE_FRIEND_STATUS_SUCCESS DeclineFriendStatus = 2
	// Friend request was not found
	DeclineFriendStatus_DECLINE_FRIEND_STATUS_REQUEST_NOT_FOUND DeclineFriendStatus = 3
	// Friend request was already declined
	DeclineFriendStatus_DECLINE_FRIEND_STATUS_ALREADY_DECLINED DeclineFriendStatus = 4
	// A user cannot decline their own friend request
	DeclineFriendStatus_DECLINE_FRIEND_STATUS_SELF_DECLINE_NOT_ALLOWED DeclineFriendStatus = 6
)

// Enum value maps for DeclineFriendStatus.
var (
	DeclineFriendStatus_name = map[int32]string{
		0: "DECLINE_FRIEND_STATUS_UNSPECIFIED",
		1: "DECLINE_FRIEND_STATUS_ALREADY_FRIENDS",
		2: "DECLINE_FRIEND_STATUS_SUCCESS",
		3: "DECLINE_FRIEND_STATUS_REQUEST_NOT_FOUND",
		4: "DECLINE_FRIEND_STATUS_ALREADY_DECLINED",
		6: "DECLINE_FRIEND_STATUS_SELF_DECLINE_NOT_ALLOWED",
	}
	DeclineFriendStatus_value = map[string]int32{
		"DECLINE_FRIEND_STATUS_UNSPECIFIED":              0,
		"DECLINE_FRIEND_STATUS_ALREADY_FRIENDS":          1,
		"DECLINE_FRIEND_STATUS_SUCCESS":                  2,
		"DECLINE_FRIEND_STATUS_REQUEST_NOT_FOUND":        3,
		"DECLINE_FRIEND_STATUS_ALREADY_DECLINED":         4,
		"DECLINE_FRIEND_STATUS_SELF_DECLINE_NOT_ALLOWED": 6,
	}
)

func (x DeclineFriendStatus) Enum() *DeclineFriendStatus {
	p := new(DeclineFriendStatus)
	*p = x
	return p
}

func (x DeclineFriendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeclineFriendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_friendship_enums_proto_enumTypes[2].Descriptor()
}

func (DeclineFriendStatus) Type() protoreflect.EnumType {
	return &file_api_proto_v1_friendship_enums_proto_enumTypes[2]
}

func (x DeclineFriendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeclineFriendStatus.Descriptor instead.
func (DeclineFriendStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_enums_proto_rawDescGZIP(), []int{2}
}

// RemoveFriendStatus represents the result of removing a friend
type RemoveFriendStatus int32

const (
	// Default unspecified status
	RemoveFriendStatus_REMOVE_FRIEND_STATUS_UNSPECIFIED RemoveFriendStatus = 0
	// Removal is not allowed due to a block
	RemoveFriendStatus_REMOVE_FRIEND_STATUS_BLOCKED RemoveFriendStatus = 1
	// Friend was removed successfully
	RemoveFriendStatus_REMOVE_FRIEND_STATUS_SUCCESS RemoveFriendStatus = 2
	// The users are not friends
	RemoveFriendStatus_REMOVE_FRIEND_STATUS_NOT_FRIENDS RemoveFriendStatus = 3
	// The target user was not found
	RemoveFriendStatus_REMOVE_FRIEND_STATUS_USER_NOT_FOUND RemoveFriendStatus = 4
	// A user cannot remove themselves as a friend
	RemoveFriendStatus_REMOVE_FRIEND_STATUS_SELF_REMOVE_NOT_ALLOWED RemoveFriendStatus = 5
)

// Enum value maps for RemoveFriendStatus.
var (
	RemoveFriendStatus_name = map[int32]string{
		0: "REMOVE_FRIEND_STATUS_UNSPECIFIED",
		1: "REMOVE_FRIEND_STATUS_BLOCKED",
		2: "REMOVE_FRIEND_STATUS_SUCCESS",
		3: "REMOVE_FRIEND_STATUS_NOT_FRIENDS",
		4: "REMOVE_FRIEND_STATUS_USER_NOT_FOUND",
		5: "REMOVE_FRIEND_STATUS_SELF_REMOVE_NOT_ALLOWED",
	}
	RemoveFriendStatus_value = map[string]int32{
		"REMOVE_FRIEND_STATUS_UNSPECIFIED":             0,
		"REMOVE_FRIEND_STATUS_BLOCKED":                 1,
		"REMOVE_FRIEND_STATUS_SUCCESS":                 2,
		"REMOVE_FRIEND_STATUS_NOT_FRIENDS":             3,
		"REMOVE_FRIEND_STATUS_USER_NOT_FOUND":          4,
		"REMOVE_FRIEND_STATUS_SELF_REMOVE_NOT_ALLOWED": 5,
	}
)

func (x RemoveFriendStatus) Enum() *RemoveFriendStatus {
	p := new(RemoveFriendStatus)
	*p = x
	return p
}

func (x RemoveFriendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveFriendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_friendship_enums_proto_enumTypes[3].Descriptor()
}

func (RemoveFriendStatus) Type() protoreflect.EnumType {
	return &file_api_proto_v1_friendship_enums_proto_enumTypes[3]
}

func (x RemoveFriendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveFriendStatus.Descriptor instead.
func (RemoveFriendStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_enums_proto_rawDescGZIP(), []int{3}
}

var File_api_proto_v1_friendship_enums_proto protoreflect.FileDescriptor

const file_api_proto_v1_friendship_enums_proto_rawDesc = "" +
	"\n" +
	"#api/proto/v1/friendship/enums.proto\x12/github.com.nazarovnick.chat_platform.friendship\x1a.protoc-gen-openapiv2/options/annotations.proto*\xb7\r\n" +
	"\x13FriendRequestStatus\x12%\n" +
	"!FRIEND_REQUEST_STATUS_UNSPECIFIED\x10\x00\x12)\n" +
	"%FRIEND_REQUEST_STATUS_ALREADY_FRIENDS\x10\x01\x12!\n" +
	"\x1dFRIEND_REQUEST_STATUS_BLOCKED\x10\x02\x12!\n" +
	"\x1dFRIEND_REQUEST_STATUS_SUCCESS\x10\x03\x120\n" +
	",FRIEND_REQUEST_STATUS_REQUEST_ALREADY_EXISTS\x10\x04\x12(\n" +
	"$FRIEND_REQUEST_STATUS_USER_NOT_FOUND\x10\x05\x122\n" +
	".FRIEND_REQUEST_STATUS_SELF_REQUEST_NOT_ALLOWED\x10\x06\x1a\xf7\n" +
	"\x92A\xf3\n" +
	"\n" +
	"\xd5\n" +
	"EN:\n" +
	"Represents the result of sending a friend request.\n" +
	"\n" +
	"1.) FRIEND_REQUEST_STATUS_UNSPECIFIED: Default unspecified status\n" +
	"2.) FRIEND_REQUEST_STATUS_ALREADY_FRIENDS: Users are already friends\n" +
	"3.) FRIEND_REQUEST_STATUS_BLOCKED: The sender is blocked by the recipient\n" +
	"4.) FRIEND_REQUEST_STATUS_SUCCESS: Request was successfully sent\n" +
	"5.) FRIEND_REQUEST_STATUS_REQUEST_ALREADY_EXISTS: Request already exists\n" +
	"6.) FRIEND_REQUEST_STATUS_USER_NOT_FOUND: Target user not found\n" +
	"7.) FRIEND_REQUEST_STATUS_SELF_REQUEST_NOT_ALLOWED: Cannot send request to self\n" +
	"\n" +
	"\n" +
	"RU:\n" +
	"Представляет собой результат отправки запроса надобавление в друзья.\n" +
	"\n" +
	"1.) FRIEND_REQUEST_STATUS_UNSPECIFIED: Статус по умолчанию не указан\n" +
	"2.) FRIEND_REQUEST_STATUS_ALREADY_FRIENDS: Пользователи уже друзья\n" +
	"3.) FRIEND_REQUEST_STATUS_BLOCKED: Отправитель заблокирован получателем\n" +
	"4.) FRIEND_REQUEST_STATUS_SUCCESS: Заявка успешно отправлена\n" +
	"5.) FRIEND_REQUEST_STATUS_REQUEST_ALREADY_EXISTS: Заявка уже существует\n" +
	"6.) FRIEND_REQUEST_STATUS_USER_NOT_FOUND: Целевой пользователь не найден\n" +
	"7.) FRIEND_REQUEST_STATUS_SELF_REQUEST_NOT_ALLOWED: Нельзя отправить заявку самому себе\n" +
	"\x1a\x19ENUM: FriendRequestStatus*\xc9\r\n" +
	"\x12AcceptFriendStatus\x12$\n" +
	" ACCEPT_FRIEND_STATUS_UNSPECIFIED\x10\x00\x12(\n" +
	"$ACCEPT_FRIEND_STATUS_ALREADY_FRIENDS\x10\x01\x12 \n" +
	"\x1cACCEPT_FRIEND_STATUS_BLOCKED\x10\x02\x12 \n" +
	"\x1cACCEPT_FRIEND_STATUS_SUCCESS\x10\x03\x12*\n" +
	"&ACCEPT_FRIEND_STATUS_REQUEST_NOT_FOUND\x10\x04\x12)\n" +
	"%ACCEPT_FRIEND_STATUS_ALREADY_ACCEPTED\x10\x05\x120\n" +
	",ACCEPT_FRIEND_STATUS_SELF_ACCEPT_NOT_ALLOWED\x10\x06\x1a\x95\v\x92A\x91\v\n" +
	"\xf4\n" +
	"EN:\n" +
	"Represents the result of accepting a friend request.\n" +
	"\n" +
	"1.) ACCEPT_FRIEND_STATUS_UNSPECIFIED: Default unspecified status\n" +
	"2.) ACCEPT_FRIEND_STATUS_ALREADY_FRIENDS: Users are already friends\n" +
	"3.) ACCEPT_FRIEND_STATUS_BLOCKED: The request cannot be accepted due to a block\n" +
	"4.) ACCEPT_FRIEND_STATUS_SUCCESS: Friend request was accepted successfully\n" +
	"5.) ACCEPT_FRIEND_STATUS_REQUEST_NOT_FOUND: Friend request was not found\n" +
	"6.) ACCEPT_FRIEND_STATUS_ALREADY_ACCEPTED: Friend request was already accepted\n" +
	"7.) ACCEPT_FRIEND_STATUS_SELF_ACCEPT_NOT_ALLOWED: A user cannot accept their own friend request\n" +
	"\n" +
	"\n" +
	"RU:\n" +
	"Представляет собой результат принятия запроса в друзья.\n" +
	"\n" +
	"1.) ACCEPT_FRIEND_STATUS_UNSPECIFIED: Статус по умолчанию, не указан\n" +
	"2.) ACCEPT_FRIEND_STATUS_ALREADY_FRIENDS: Пользователи уже являются друзьями\n" +
	"3.) ACCEPT_FRIEND_STATUS_BLOCKED: Невозможно принять заявку из-за блокировки\n" +
	"4.) ACCEPT_FRIEND_STATUS_SUCCESS: Заявка успешно принята\n" +
	"5.) ACCEPT_FRIEND_STATUS_REQUEST_NOT_FOUND: Заявка не найдена\n" +
	"6.) ACCEPT_FRIEND_STATUS_ALREADY_ACCEPTED: Заявка уже была принята ранее\n" +
	"7.) ACCEPT_FRIEND_STATUS_SELF_ACCEPT_NOT_ALLOWED: Нельзя принять свою собственную заявку\n" +
	"\x1a\x18ENUM: AcceptFriendStatus*\x8d\f\n" +
	"\x13DeclineFriendStatus\x12%\n" +
	"!DECLINE_FRIEND_STATUS_UNSPECIFIED\x10\x00\x12)\n" +
	"%DECLINE_FRIEND_STATUS_ALREADY_FRIENDS\x10\x01\x12!\n" +
	"\x1dDECLINE_FRIEND_STATUS_SUCCESS\x10\x02\x12+\n" +
	"'DECLINE_FRIEND_STATUS_REQUEST_NOT_FOUND\x10\x03\x12*\n" +
	"&DECLINE_FRIEND_STATUS_ALREADY_DECLINED\x10\x04\x122\n" +
	".DECLINE_FRIEND_STATUS_SELF_DECLINE_NOT_ALLOWED\x10\x06\x1a\xf3\t\x92A\xef\t\n" +
	"\xd1\tEN:\n" +
	"Represents the result of declining a friend request.\n" +
	"\n" +
	"1.) DECLINE_FRIEND_STATUS_UNSPECIFIED: Default unspecified status\n" +
	"2.) DECLINE_FRIEND_STATUS_ALREADY_FRIENDS: Users are already friends\n" +
	"3.) DECLINE_FRIEND_STATUS_SUCCESS: Friend request was declined successfully\n" +
	"4.) DECLINE_FRIEND_STATUS_REQUEST_NOT_FOUND: Friend request was not found\n" +
	"5.) DECLINE_FRIEND_STATUS_ALREADY_DECLINED: Friend request was already declined\n" +
	"6.) DECLINE_FRIEND_STATUS_SELF_DECLINE_NOT_ALLOWED: A user cannot decline their own friend request\n" +
	"\n" +
	"\n" +
	"RU:\n" +
	"Представляет собой результат отклонения запроса в друзья.\n" +
	"\n" +
	"1.) DECLINE_FRIEND_STATUS_UNSPECIFIED: Статус по умолчанию, не указан\n" +
	"2.) DECLINE_FRIEND_STATUS_ALREADY_FRIENDS: Пользователи уже являются друзьями\n" +
	"3.) DECLINE_FRIEND_STATUS_SUCCESS: Заявка успешно отклонена\n" +
	"4.) DECLINE_FRIEND_STATUS_REQUEST_NOT_FOUND: Заявка не найдена\n" +
	"5.) DECLINE_FRIEND_STATUS_ALREADY_DECLINED: Заявка уже была отклонена ранее\n" +
	"6.) DECLINE_FRIEND_STATUS_SELF_DECLINE_NOT_ALLOWED: Нельзя отклонить свою собственную заявку\n" +
	"\x1a\x19ENUM: DeclineFriendStatus*\xde\v\n" +
	"\x12RemoveFriendStatus\x12$\n" +
	" REMOVE_FRIEND_STATUS_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cREMOVE_FRIEND_STATUS_BLOCKED\x10\x01\x12 \n" +
	"\x1cREMOVE_FRIEND_STATUS_SUCCESS\x10\x02\x12$\n" +
	" REMOVE_FRIEND_STATUS_NOT_FRIENDS\x10\x03\x12'\n" +
	"#REMOVE_FRIEND_STATUS_USER_NOT_FOUND\x10\x04\x120\n" +
	",REMOVE_FRIEND_STATUS_SELF_REMOVE_NOT_ALLOWED\x10\x05\x1a\xdc\t\x92A\xd8\t\n" +
	"\xbb\tEN:\n" +
	"Represents the result of removing a friend.\n" +
	"\n" +
	"1.) REMOVE_FRIEND_STATUS_UNSPECIFIED: Default unspecified status\n" +
	"2.) REMOVE_FRIEND_STATUS_BLOCKED: Removal is not allowed due to a block\n" +
	"3.) REMOVE_FRIEND_STATUS_SUCCESS: Friend was removed successfully\n" +
	"4.) REMOVE_FRIEND_STATUS_NOT_FRIENDS: The users are not friends\n" +
	"5.) REMOVE_FRIEND_STATUS_USER_NOT_FOUND: The target user was not found\n" +
	"6.) REMOVE_FRIEND_STATUS_SELF_REMOVE_NOT_ALLOWED: A user cannot remove themselves as a friend\n" +
	"\n" +
	"\n" +
	"RU:\n" +
	"Представляет собой результат удаления пользователя из друзей.\n" +
	"\n" +
	"1.) REMOVE_FRIEND_STATUS_UNSPECIFIED: Статус по умолчанию, не указан\n" +
	"2.) REMOVE_FRIEND_STATUS_BLOCKED: Удаление невозможно из-за блокировки\n" +
	"3.) REMOVE_FRIEND_STATUS_SUCCESS: Друг был успешно удалён\n" +
	"4.) REMOVE_FRIEND_STATUS_NOT_FRIENDS: Пользователи не являются друзьями\n" +
	"5.) REMOVE_FRIEND_STATUS_USER_NOT_FOUND: Целевой пользователь не найден\n" +
	"6.) REMOVE_FRIEND_STATUS_SELF_REMOVE_NOT_ALLOWED: Нельзя удалить самого себя из списка друзей\n" +
	"\x1a\x18ENUM: RemoveFriendStatusB\x13Z\x11/friendship/v1;v1b\x06proto3"

var (
	file_api_proto_v1_friendship_enums_proto_rawDescOnce sync.Once
	file_api_proto_v1_friendship_enums_proto_rawDescData []byte
)

func file_api_proto_v1_friendship_enums_proto_rawDescGZIP() []byte {
	file_api_proto_v1_friendship_enums_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_friendship_enums_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_v1_friendship_enums_proto_rawDesc), len(file_api_proto_v1_friendship_enums_proto_rawDesc)))
	})
	return file_api_proto_v1_friendship_enums_proto_rawDescData
}

var file_api_proto_v1_friendship_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_proto_v1_friendship_enums_proto_goTypes = []any{
	(FriendRequestStatus)(0), // 0: github.com.nazarovnick.chat_platform.friendship.FriendRequestStatus
	(AcceptFriendStatus)(0),  // 1: github.com.nazarovnick.chat_platform.friendship.AcceptFriendStatus
	(DeclineFriendStatus)(0), // 2: github.com.nazarovnick.chat_platform.friendship.DeclineFriendStatus
	(RemoveFriendStatus)(0),  // 3: github.com.nazarovnick.chat_platform.friendship.RemoveFriendStatus
}
var file_api_proto_v1_friendship_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_proto_v1_friendship_enums_proto_init() }
func file_api_proto_v1_friendship_enums_proto_init() {
	if File_api_proto_v1_friendship_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_v1_friendship_enums_proto_rawDesc), len(file_api_proto_v1_friendship_enums_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_v1_friendship_enums_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_friendship_enums_proto_depIdxs,
		EnumInfos:         file_api_proto_v1_friendship_enums_proto_enumTypes,
	}.Build()
	File_api_proto_v1_friendship_enums_proto = out.File
	file_api_proto_v1_friendship_enums_proto_goTypes = nil
	file_api_proto_v1_friendship_enums_proto_depIdxs = nil
}
