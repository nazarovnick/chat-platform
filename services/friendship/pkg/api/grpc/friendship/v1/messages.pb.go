// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: api/proto/v1/friendship/messages.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SendFriendRequest represents a request to send a friend invitation
type SendFriendRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_uuid is the UUID of the user who is sending the friend request
	UserUuid string `protobuf:"bytes,1,opt,name=user_uuid,proto3" json:"user_uuid,omitempty"`
	// target_user_uuid is the UUID of the user to whom
	// the friend request is being sent
	TargetUserUuid string `protobuf:"bytes,2,opt,name=target_user_uuid,proto3" json:"target_user_uuid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendFriendRequest) Reset() {
	*x = SendFriendRequest{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequest) ProtoMessage() {}

func (x *SendFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequest.ProtoReflect.Descriptor instead.
func (*SendFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{0}
}

func (x *SendFriendRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *SendFriendRequest) GetTargetUserUuid() string {
	if x != nil {
		return x.TargetUserUuid
	}
	return ""
}

// SendFriendResponse contains the result of sending a friend invitation
type SendFriendResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// status indicates the result of the friend request operation (enum)
	Status        FriendRequestStatus `protobuf:"varint,1,opt,name=status,proto3,enum=github.com.nazarovnick.chat_platform.friendship.FriendRequestStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFriendResponse) Reset() {
	*x = SendFriendResponse{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendResponse) ProtoMessage() {}

func (x *SendFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendResponse.ProtoReflect.Descriptor instead.
func (*SendFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{1}
}

func (x *SendFriendResponse) GetStatus() FriendRequestStatus {
	if x != nil {
		return x.Status
	}
	return FriendRequestStatus_FRIEND_REQUEST_STATUS_UNSPECIFIED
}

// AcceptFriendRequest represents a request to accept an incoming friend request
type AcceptFriendRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_uuid is the UUID of the user who accepts the incoming friend request
	UserUuid string `protobuf:"bytes,1,opt,name=user_uuid,proto3" json:"user_uuid,omitempty"`
	// target_user_uuid is the UUID of the user who originally
	// sent the friend request
	TargetUserUuid string `protobuf:"bytes,2,opt,name=target_user_uuid,proto3" json:"target_user_uuid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AcceptFriendRequest) Reset() {
	*x = AcceptFriendRequest{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendRequest) ProtoMessage() {}

func (x *AcceptFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendRequest.ProtoReflect.Descriptor instead.
func (*AcceptFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{2}
}

func (x *AcceptFriendRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *AcceptFriendRequest) GetTargetUserUuid() string {
	if x != nil {
		return x.TargetUserUuid
	}
	return ""
}

// AcceptFriendResponse contains the result of accepting a friend request
type AcceptFriendResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// status indicates the result of the friend request
	// acceptance operation (enum)
	Status        AcceptFriendStatus `protobuf:"varint,1,opt,name=status,proto3,enum=github.com.nazarovnick.chat_platform.friendship.AcceptFriendStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptFriendResponse) Reset() {
	*x = AcceptFriendResponse{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFriendResponse) ProtoMessage() {}

func (x *AcceptFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFriendResponse.ProtoReflect.Descriptor instead.
func (*AcceptFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{3}
}

func (x *AcceptFriendResponse) GetStatus() AcceptFriendStatus {
	if x != nil {
		return x.Status
	}
	return AcceptFriendStatus_ACCEPT_FRIEND_STATUS_UNSPECIFIED
}

// DeclineFriendRequest represents a request to decline
// an incoming friend request
type DeclineFriendRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_uuid is the UUID of the user who is declining
	// the incoming friend request
	UserUuid string `protobuf:"bytes,1,opt,name=user_uuid,proto3" json:"user_uuid,omitempty"`
	// target_user_uuid is the UUID of the user who originally
	// sent the friend request
	TargetUserUuid string `protobuf:"bytes,2,opt,name=target_user_uuid,proto3" json:"target_user_uuid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeclineFriendRequest) Reset() {
	*x = DeclineFriendRequest{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeclineFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineFriendRequest) ProtoMessage() {}

func (x *DeclineFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineFriendRequest.ProtoReflect.Descriptor instead.
func (*DeclineFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{4}
}

func (x *DeclineFriendRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DeclineFriendRequest) GetTargetUserUuid() string {
	if x != nil {
		return x.TargetUserUuid
	}
	return ""
}

// DeclineFriendResponse contains the result of declining a friend request
type DeclineFriendResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// status indicates the result of the decline operation (enum)
	Status        DeclineFriendStatus `protobuf:"varint,1,opt,name=status,proto3,enum=github.com.nazarovnick.chat_platform.friendship.DeclineFriendStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeclineFriendResponse) Reset() {
	*x = DeclineFriendResponse{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeclineFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineFriendResponse) ProtoMessage() {}

func (x *DeclineFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineFriendResponse.ProtoReflect.Descriptor instead.
func (*DeclineFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{5}
}

func (x *DeclineFriendResponse) GetStatus() DeclineFriendStatus {
	if x != nil {
		return x.Status
	}
	return DeclineFriendStatus_DECLINE_FRIEND_STATUS_UNSPECIFIED
}

// RemoveFriendRequest represents a request to remove an existing friend
type RemoveFriendRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_uuid is the UUID of the user who initiates the removal
	UserUuid string `protobuf:"bytes,1,opt,name=user_uuid,proto3" json:"user_uuid,omitempty"`
	// target_user_uuid is the UUID of the friend being removed
	TargetUserUuid string `protobuf:"bytes,2,opt,name=target_user_uuid,proto3" json:"target_user_uuid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RemoveFriendRequest) Reset() {
	*x = RemoveFriendRequest{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFriendRequest) ProtoMessage() {}

func (x *RemoveFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFriendRequest.ProtoReflect.Descriptor instead.
func (*RemoveFriendRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveFriendRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *RemoveFriendRequest) GetTargetUserUuid() string {
	if x != nil {
		return x.TargetUserUuid
	}
	return ""
}

// RemoveFriendResponse contains the result of removing a friend
type RemoveFriendResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// status indicates the result of the removal operation (enum)
	Status        RemoveFriendStatus `protobuf:"varint,1,opt,name=status,proto3,enum=github.com.nazarovnick.chat_platform.friendship.RemoveFriendStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFriendResponse) Reset() {
	*x = RemoveFriendResponse{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFriendResponse) ProtoMessage() {}

func (x *RemoveFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFriendResponse.ProtoReflect.Descriptor instead.
func (*RemoveFriendResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveFriendResponse) GetStatus() RemoveFriendStatus {
	if x != nil {
		return x.Status
	}
	return RemoveFriendStatus_REMOVE_FRIEND_STATUS_UNSPECIFIED
}

// GetFriendsRequest represents a request to retrieve a user's friend list
type GetFriendsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_uuid is the UUID of the user whose friends are being requested
	UserUuid      string `protobuf:"bytes,1,opt,name=user_uuid,proto3" json:"user_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendsRequest) Reset() {
	*x = GetFriendsRequest{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsRequest) ProtoMessage() {}

func (x *GetFriendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsRequest.ProtoReflect.Descriptor instead.
func (*GetFriendsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{8}
}

func (x *GetFriendsRequest) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

// GetFriendsResponse contains a list of friend user IDs
type GetFriendsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// friend_ids is a list of UUIDs representing the user's friends
	FriendUuids   []string `protobuf:"bytes,1,rep,name=friend_uuids,proto3" json:"friend_uuids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendsResponse) Reset() {
	*x = GetFriendsResponse{}
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsResponse) ProtoMessage() {}

func (x *GetFriendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_friendship_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsResponse.ProtoReflect.Descriptor instead.
func (*GetFriendsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_friendship_messages_proto_rawDescGZIP(), []int{9}
}

func (x *GetFriendsResponse) GetFriendUuids() []string {
	if x != nil {
		return x.FriendUuids
	}
	return nil
}

var File_api_proto_v1_friendship_messages_proto protoreflect.FileDescriptor

const file_api_proto_v1_friendship_messages_proto_rawDesc = "" +
	"\n" +
	"&api/proto/v1/friendship/messages.proto\x12/github.com.nazarovnick.chat_platform.friendship\x1a#api/proto/v1/friendship/enums.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xa7\x05\n" +
	"\x11SendFriendRequest\x12\xc6\x01\n" +
	"\tuser_uuid\x18\x01 \x01(\tB\xa7\x01\x92A\x98\x01*\x1bUUID отправителя2yUUID пользователя, который отправляет запрос на добавление в друзья\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\tuser_uuid\x12\xd8\x01\n" +
	"\x10target_user_uuid\x18\x02 \x01(\tB\xab\x01\x92A\x9c\x01*\x19UUID получателя2\x7fUUID пользователя, которому отправляется запрос на добавление в друзья\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\x10target_user_uuid:\xed\x01\x92A\xe9\x01\n" +
	"\xe6\x01*\x11SendFriendRequest2?Запрос на отправку заявки в друзьяJq{\"user_uuid\": \"d290f1ee-6c54-4b01-90e6-d701748f0851\", \"target_user_uuid\": \"ba9f62de-2fa9-4ac3-87a2-123456789abc\"}\xd2\x01\tuser_uuid\xd2\x01\x10target_user_uuid\"\xa2\x02\n" +
	"\x12SendFriendResponse\x12f\n" +
	"\x06status\x18\x01 \x01(\x0e2D.github.com.nazarovnick.chat_platform.friendship.FriendRequestStatusB\b\xbaH\x05\x82\x01\x02\x10\x01R\x06status:\xa3\x01\x92A\x9f\x01\n" +
	"\x9c\x01*\x12SendFriendResponse2LОтвет на попытку отправки заявки в друзьяJ/{\"status\": \"FRIEND_REQUEST_STATUS_UNSPECIFIED\"}\xd2\x01\x06status\"\xfc\x02\n" +
	"\x13AcceptFriendRequest\x12)\n" +
	"\tuser_uuid\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\tuser_uuid\x127\n" +
	"\x10target_user_uuid\x18\x02 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\x10target_user_uuid:\x80\x02\x92A\xfc\x01\n" +
	"\xf9\x01*\x13AcceptFriendRequest2PЗапрос на принятие входящей заявки в друзьяJq{\"user_uuid\": \"b72f8c58-67a3-4a8b-a4f5-c3de47812ab1\", \"target_user_uuid\": \"8e39eaf7-34f6-4b0e-ae3d-b54c3db4ee64\"}\xd2\x01\tuser_uuid\xd2\x01\x10target_user_uuid\"\xae\x02\n" +
	"\x14AcceptFriendResponse\x12e\n" +
	"\x06status\x18\x01 \x01(\x0e2C.github.com.nazarovnick.chat_platform.friendship.AcceptFriendStatusB\b\xbaH\x05\x82\x01\x02\x10\x01R\x06status:\xae\x01\x92A\xaa\x01\n" +
	"\xa7\x01*\x14AcceptFriendResponse2VОтвет на попытку подтверждения заявки в друзьяJ.{\"status\": \"ACCEPT_FRIEND_STATUS_UNSPECIFIED\"}\xd2\x01\x06status\"\x82\x03\n" +
	"\x14DeclineFriendRequest\x12)\n" +
	"\tuser_uuid\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\tuser_uuid\x127\n" +
	"\x10target_user_uuid\x18\x02 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\x10target_user_uuid:\x85\x02\x92A\x81\x02\n" +
	"\xfe\x01*\x14DeclineFriendRequest2TЗапрос на отклонение входящей заявки в друзьяJq{\"user_uuid\": \"56fc9f5e-0282-4a44-8a45-d3b479083e1a\", \"target_user_uuid\": \"4e9e1df8-c158-420a-abc1-0123456789ab\"}\xd2\x01\tuser_uuid\xd2\x01\x10target_user_uuid\"\x9d\x02\n" +
	"\x15DeclineFriendResponse\x12f\n" +
	"\x06status\x18\x01 \x01(\x0e2D.github.com.nazarovnick.chat_platform.friendship.DeclineFriendStatusB\b\xbaH\x05\x82\x01\x02\x10\x01R\x06status:\x9b\x01\x92A\x97\x01\n" +
	"\x94\x01*\x15DeclineFriendResponse2AОтвет на отклонение заявки в друзьяJ/{\"status\": \"DECLINE_FRIEND_STATUS_UNSPECIFIED\"}\xd2\x01\x06status\"\x86\x03\n" +
	"\x13RemoveFriendRequest\x12)\n" +
	"\tuser_uuid\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\tuser_uuid\x127\n" +
	"\x10target_user_uuid\x18\x02 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\x10target_user_uuid:\x8a\x02\x92A\x86\x02\n" +
	"\x83\x02*\x13RemoveFriendRequest2ZЗапрос на удаление пользователя из списка друзейJq{\"user_uuid\": \"2a1f6fce-5f92-4d2d-bf56-32f3a4b89129\", \"target_user_uuid\": \"72d98fd2-3f9a-44e7-8d72-dff94391a1c1\"}\xd2\x01\tuser_uuid\xd2\x01\x10target_user_uuid\"\xf9\x01\n" +
	"\x14RemoveFriendResponse\x12e\n" +
	"\x06status\x18\x01 \x01(\x0e2C.github.com.nazarovnick.chat_platform.friendship.RemoveFriendStatusB\b\xbaH\x05\x82\x01\x02\x10\x01R\x06status:z\x92Aw\n" +
	"u2:Ответ на попытку удаления другаJ.{\"status\": \"REMOVE_FRIEND_STATUS_UNSPECIFIED\"}\xd2\x01\x06status\"\x96\x02\n" +
	"\x11GetFriendsRequest\x12)\n" +
	"\tuser_uuid\x18\x01 \x01(\tB\v\xbaH\b\xc8\x01\x01r\x03\xb0\x01\x01R\tuser_uuid:\xd5\x01\x92A\xd1\x01\n" +
	"\xce\x01*\x11GetFriendsRequest2vЗапрос на получение списка идентификаторов друзей пользователяJ5{\"user_uuid\": \"5e2d1c4e-3a84-4ec2-901f-9939c8737d7b\"}\xd2\x01\tuser_uuid\"\x94\x02\n" +
	"\x12GetFriendsResponse\x12\"\n" +
	"\ffriend_uuids\x18\x01 \x03(\tR\ffriend_uuids:\xd9\x01\x92A\xd5\x01\n" +
	"\xd2\x01*\x12GetFriendsResponse2XОтвет, содержащий список UUID-друзей пользователяJb{\"friend_uuids\": [\"1a2b3c4d-5678-1234-abcd-1234567890ab\", \"9f8e7d6c-4321-5678-abcd-0987654321ff\"]}B\x13Z\x11/friendship/v1;v1b\x06proto3"

var (
	file_api_proto_v1_friendship_messages_proto_rawDescOnce sync.Once
	file_api_proto_v1_friendship_messages_proto_rawDescData []byte
)

func file_api_proto_v1_friendship_messages_proto_rawDescGZIP() []byte {
	file_api_proto_v1_friendship_messages_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_friendship_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_v1_friendship_messages_proto_rawDesc), len(file_api_proto_v1_friendship_messages_proto_rawDesc)))
	})
	return file_api_proto_v1_friendship_messages_proto_rawDescData
}

var file_api_proto_v1_friendship_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_proto_v1_friendship_messages_proto_goTypes = []any{
	(*SendFriendRequest)(nil),     // 0: github.com.nazarovnick.chat_platform.friendship.SendFriendRequest
	(*SendFriendResponse)(nil),    // 1: github.com.nazarovnick.chat_platform.friendship.SendFriendResponse
	(*AcceptFriendRequest)(nil),   // 2: github.com.nazarovnick.chat_platform.friendship.AcceptFriendRequest
	(*AcceptFriendResponse)(nil),  // 3: github.com.nazarovnick.chat_platform.friendship.AcceptFriendResponse
	(*DeclineFriendRequest)(nil),  // 4: github.com.nazarovnick.chat_platform.friendship.DeclineFriendRequest
	(*DeclineFriendResponse)(nil), // 5: github.com.nazarovnick.chat_platform.friendship.DeclineFriendResponse
	(*RemoveFriendRequest)(nil),   // 6: github.com.nazarovnick.chat_platform.friendship.RemoveFriendRequest
	(*RemoveFriendResponse)(nil),  // 7: github.com.nazarovnick.chat_platform.friendship.RemoveFriendResponse
	(*GetFriendsRequest)(nil),     // 8: github.com.nazarovnick.chat_platform.friendship.GetFriendsRequest
	(*GetFriendsResponse)(nil),    // 9: github.com.nazarovnick.chat_platform.friendship.GetFriendsResponse
	(FriendRequestStatus)(0),      // 10: github.com.nazarovnick.chat_platform.friendship.FriendRequestStatus
	(AcceptFriendStatus)(0),       // 11: github.com.nazarovnick.chat_platform.friendship.AcceptFriendStatus
	(DeclineFriendStatus)(0),      // 12: github.com.nazarovnick.chat_platform.friendship.DeclineFriendStatus
	(RemoveFriendStatus)(0),       // 13: github.com.nazarovnick.chat_platform.friendship.RemoveFriendStatus
}
var file_api_proto_v1_friendship_messages_proto_depIdxs = []int32{
	10, // 0: github.com.nazarovnick.chat_platform.friendship.SendFriendResponse.status:type_name -> github.com.nazarovnick.chat_platform.friendship.FriendRequestStatus
	11, // 1: github.com.nazarovnick.chat_platform.friendship.AcceptFriendResponse.status:type_name -> github.com.nazarovnick.chat_platform.friendship.AcceptFriendStatus
	12, // 2: github.com.nazarovnick.chat_platform.friendship.DeclineFriendResponse.status:type_name -> github.com.nazarovnick.chat_platform.friendship.DeclineFriendStatus
	13, // 3: github.com.nazarovnick.chat_platform.friendship.RemoveFriendResponse.status:type_name -> github.com.nazarovnick.chat_platform.friendship.RemoveFriendStatus
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_proto_v1_friendship_messages_proto_init() }
func file_api_proto_v1_friendship_messages_proto_init() {
	if File_api_proto_v1_friendship_messages_proto != nil {
		return
	}
	file_api_proto_v1_friendship_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_v1_friendship_messages_proto_rawDesc), len(file_api_proto_v1_friendship_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_v1_friendship_messages_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_friendship_messages_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_friendship_messages_proto_msgTypes,
	}.Build()
	File_api_proto_v1_friendship_messages_proto = out.File
	file_api_proto_v1_friendship_messages_proto_goTypes = nil
	file_api_proto_v1_friendship_messages_proto_depIdxs = nil
}
